## This is the text editor interface. 
## Anything you type or change here will be seen by the other person in real time.
## Ready!

# S   H   O   E
#   C   O   L    D
# S C H O O L E D   -> schooled = interlocked word
# schooled = ['shoe', 'cold']
# collude = ['CLUE', 'old']

# sample words = apple, banana, shoe, cold, schooled, 
#write a function to filter out all the interlocked words, and print the interlocked word + the components of the word
#schooled = shoe + cold


#baronages = ['bog', 'ane', 'ras']
#pinecones = ['pen', 'ice', 'nos']




#Bill
#Foo


#english = ['apple', 'banana', 'shoe', 'cold', 'schooled', 'spit', 'ohs', 'sped', 'aha', 'sure', 'cris', 'sord', 'cue', 'fils', 'obe', 'clue', 'olds', 'wee', 'ewe', 'act', #'sos', 'brad', 'ami', 'sophist', 'saphead', 'scurries', 'scoured', 'foibles', 'colludes', 'collude', 'old', 'weewee', 'ascots', 'bar', 'barmaid'] #pretend this has ALL the words in english

english = ['apple', 'banana', 'shoe', 'cold', 'schooled', 'spit', 'ohs', 'sped', 'aha', 'sure', 'cris', 'sord', 'cue', 'fils', 'obe', 'clue', 'olds', 'wee', 'ewe', 'act', 'sos', 'brad', 'ami', 'sophist', 'saphead', 'scurries', 'scoured', 'foibles', 'colludes', 'collude', 'old', 'weewee', 'ascots', 'bar', 'barmaid', "ten", "ale", "pis", "lit", "ane", "mad", "lit", "ane", "mas", "dad", "ami", "tea", "duo", "inn", "sis", "bog", "ane", "ras", "pen", "ice", "nos", "tapelines", "laminated", "laminates", "datamedia", "disunions", "baronages", "pinecones"]

#def interlock(word_a, word_b):
#    for x in word_a, word_b:
#        print x
        
    

#interlock('apple', 'shoe')

def de_interlock(word, x):
    list_words = []
    
    word_a = word[::x]
    word_b = word[1::x]
    
    return word_a, word_b

def interview():
    for word in english:
        word_a, word_b = de_interlock(word)
        if word_a in english and word_b in english:
            print word + '=' + word_a + ' ' + word_b
        
interview()
  
  
#def filter_list():
#    interlocked_list = filter(some_func, english)
